imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)
sum(missing_rows)
imputedcsv$steps<-impute(imputedcsv$steps,fun=average_num_steps_at_time)
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)
sum(missing_rows)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time(imputedcsv[n,3],2)
}
average_num_steps_at_time
average_num_steps_at_time[0,]
average_num_steps_at_time[1,]
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)
sum(missing_rows)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time(which(average_num_steps_at_time==imputedcsv[n,3]),2)
}
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time[which(average_num_steps_at_time==imputedcsv[n,3]),2]
}
for(n in missing_rows){
interval<-imputedcsv[n,3]
temp=which(average_num_steps_at_time==interval)
}
for(n in missing_rows){
interval<-imputedcsv[n,3]
}
head(imputedcsv)
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)
sum(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
}
head(imputedcsv)
?which
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time==interval)
}
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
}
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[1]==interval)
}
average_num_steps_at_time
average_num_steps_at_time[,1]
average_num_steps_at_time[,2]
average_num_steps_at_time[,1]
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
}
imputedcsv[1,]
imputedcsv[1,3]
for(n in missing_rows){
interval<-imputedcsv[n,3]
for(m in average_num_steps_at_time[,1]){
if(average_num_steps_at_time[m,1]==interval){
imputedcsv[m,1]=average_num_steps_at_time[m,2]
}
}
}
missing_rows
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)[1]
sum(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
for(m in average_num_steps_at_time[,1]){
if(average_num_steps_at_time[m,1]==interval){
imputedcsv[m,1]=average_num_steps_at_time[m,2]
}
}
}
head(imputedcsv)
library(Hmisc)
library(knitr)
library(dplyr)
library(ggplot2)
rawcsv<-read.csv(file="activity.csv",header=TRUE,sep=",")
head(rawcsv)
tidycsv<-na.omit(rawcsv)
head(tidycsv)
by_day<-group_by(tidycsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
total_steps_per_day
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
by_time<-group_by(tidycsv,interval)
average_num_steps_at_time<-summarise(by_time,average_num_steps=mean(steps))
average_num_steps_at_time
plot(average_num_steps_at_time$interval,average_num_steps_at_time$average_num_steps,type="l",ylab="average number of steps",xlab="time")
s<-average_num_steps_at_time[which.max(average_num_steps_at_time$average_num_steps),]
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)[1]
sum(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
for(m in average_num_steps_at_time[,1]){
if(average_num_steps_at_time[m,1]==interval){
imputedcsv[m,1]=average_num_steps_at_time[m,2]
}
}
}
head(imputedcsv)
head(imputedcsv)
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)[1]
sum(missing_rows)
imputedcsv<-rawcsv
missing_rows=is.na(imputedcsv)[,1]
sum(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
for(m in average_num_steps_at_time[,1]){
if(average_num_steps_at_time[m,1]==interval){
imputedcsv[m,1]=average_num_steps_at_time[m,2]
}
}
}
missing_rows
imputedcsv<-rawcsv
missing_rows=which(is.na(imputedcsv)[,1])
length(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
for(m in average_num_steps_at_time[,1]){
if(average_num_steps_at_time[m,1]==interval){
imputedcsv[m,1]=average_num_steps_at_time[m,2]
}
}
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
}
head(imputedcsv)
imputedcsv<-rawcsv
missing_rows=which(is.na(imputedcsv)[,1])
length(missing_rows)
for(n in missing_rows){
interval<-imputedcsv[n,3]
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
interval
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
print(interval)
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
print(r)
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
imputedcsv[n,1]<-r
}
head(imputedcsv)
for(n in missing_rows){
interval<-imputedcsv[n,3]
r<-which(average_num_steps_at_time[,1]==interval)
imputedcsv[n,1]<-average_num_steps_at_time[r,2]
}
head(imputedcsv)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time[which(average_num_steps_at_time[,1]==imputedcsv[n,3]),2]
}
head(imputedcsv)
by_day<-group_by(imputecsv,date)
by_day<-group_by(imputedcsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
?weekdays
head(imputedcsv)
weekdays(```{r,include=FALSE}
s<-summary(total_steps_per_day$total_steps)
```
To see the mean and median computation, look into my Rmarkdown file.
The median number of total number od steps per day is: `r as.integer(s[3])`.
The mean total number of steps per day is `r as.integer(s[4])`.)
weekdays("2012-10-01")
weekdays(2012-10-01)
weekdays(imputedcsv[1,2])
weekdays(as.POSIXct(imputedcsv[1,2]))
?weekend
is_weekend<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return(TRUE)
}
return(FALSE)
}
s<-summary(total_steps_per_day$total_steps)
is_weekend(imputedcsv[1,2])
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-day_type(imputedcsv$date)
head(imputedcsv)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type+imputedcsv,mean),type='l',xlab = "Interval",ylab="Number of steps",main = "")+facet_wrap(~type,ncol=1)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type+imputedcsv,mean),type='l',xlab = "Interval",ylab="Number of steps",main = "")+facet_wrap(~type,ncol=1))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type+imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps")
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type,imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps")
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type,imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps",geom=c("line"))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type,imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps")
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type,imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps",geom=c("line"),facet_wrap(~type, ncol=1)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
qplot(interval,steps,data=aggregate(steps~interval+type,imputedcsv,mean),type='l',xlab="Interval",ylab="Number of steps",geom=c("line"))+facet_wrap(~type, ncol=1)
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(tidycsv,type)
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
qplot(interval,steps,data=average_num_steps_time,type='l',xlab="Interval",ylab="Number of steps",geom=c("line"))+facet_wrap(~type, ncol=1)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
qplot(interval,steps,data=average_num_steps_time,type='l',xlab="Interval",ylab="Number of steps",geom=c("line"))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
qplot(average_num_steps_time,type='l',xlab="Interval",ylab="Number of steps",geom=c("line"))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
qplot(average_num_steps_time,type='l',xlab="Interval",ylab="Number of steps")
?qplot
head(average_num_steps_at_time)
1E6
1E6/12
1E6/12/1.3142
1E6/12/1.3142/1.05
library(Hmisc)
library(knitr)
library(dplyr)
library(ggplot2)
rawcsv<-read.csv(file="activity.csv",header=TRUE,sep=",")
head(rawcsv)
tidycsv<-na.omit(rawcsv)
head(tidycsv)
by_day<-group_by(tidycsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
total_steps_per_day
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
by_time<-group_by(tidycsv,interval)
average_num_steps_at_time<-summarise(by_time,average_num_steps=mean(steps))
average_num_steps_at_time
plot(average_num_steps_at_time$interval,average_num_steps_at_time$average_num_steps,type="l",ylab="average number of steps",xlab="time")
s<-average_num_steps_at_time[which.max(average_num_steps_at_time$average_num_steps),]
imputedcsv<-rawcsv
missing_rows=which(is.na(imputedcsv)[,1])
length(missing_rows)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time[which(average_num_steps_at_time[,1]==imputedcsv[n,3]),2]
}
head(imputedcsv)
by_day<-group_by(imputedcsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
}
return("Weekday")
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
by_type<-group_by(imputedcsv,type)
average_num_steps_at_time<-summarise(by_type,average_num_steps=mean(steps))
qplot(average_num_steps_time,type='l',xlab="Interval",ylab="Number of steps")
head(average_num_steps_at_time)
head(imputedcsv)
by_type
average_num_steps_at_time
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
weekdays_data<-imputedcsv[imputedcsv$type=="Weekday",]
weekends_data<-imputedcsv[imputedcsv$type=="Weekend",]
weekdays_data
weekends_data
str(imputedcsv)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
} else {
return("Weekday")
}
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
weekdays_data<-imputedcsv[imputedcsv$type=="Weekday",]
weekends_data<-imputedcsv[imputedcsv$type=="Weekend",]
weekdays_data
weekends_data
day_type<-function(x){
d=weekdays(as.POSIXct(x))
print(d)
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
} else {
return("Weekday")
}
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
} else {
print(d)
return("Weekday")
}
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
str(imputedcsv)
library(Hmisc)
library(knitr)
library(dplyr)
library(ggplot2)
rawcsv<-read.csv(file="activity.csv",header=TRUE,sep=",")
head(rawcsv)
tidycsv<-na.omit(rawcsv)
head(tidycsv)
by_day<-group_by(tidycsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
total_steps_per_day
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
by_time<-group_by(tidycsv,interval)
average_num_steps_at_time<-summarise(by_time,average_num_steps=mean(steps))
average_num_steps_at_time
plot(average_num_steps_at_time$interval,average_num_steps_at_time$average_num_steps,type="l",ylab="average number of steps",xlab="time")
s<-average_num_steps_at_time[which.max(average_num_steps_at_time$average_num_steps),]
imputedcsv<-rawcsv
missing_rows=which(is.na(imputedcsv)[,1])
length(missing_rows)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time[which(average_num_steps_at_time[,1]==imputedcsv[n,3]),2]
}
head(imputedcsv)
by_day<-group_by(imputedcsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
library(Hmisc)
library(knitr)
library(dplyr)
library(ggplot2)
rawcsv<-read.csv(file="activity.csv",header=TRUE,sep=",")
head(rawcsv)
tidycsv<-na.omit(rawcsv)
head(tidycsv)
by_day<-group_by(tidycsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
total_steps_per_day
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
by_time<-group_by(tidycsv,interval)
average_num_steps_at_time<-summarise(by_time,average_num_steps=mean(steps))
average_num_steps_at_time
plot(average_num_steps_at_time$interval,average_num_steps_at_time$average_num_steps,type="l",ylab="average number of steps",xlab="time")
s<-average_num_steps_at_time[which.max(average_num_steps_at_time$average_num_steps),]
imputedcsv<-rawcsv
missing_rows=which(is.na(imputedcsv)[,1])
length(missing_rows)
for(n in missing_rows){
imputedcsv[n,1]<-average_num_steps_at_time[which(average_num_steps_at_time[,1]==imputedcsv[n,3]),2]
}
head(imputedcsv)
by_day<-group_by(imputedcsv,date)
total_steps_per_day<-summarise(by_day,total_steps=sum(steps))
hist(total_steps_per_day$total_steps, main="Histogram over total number of steps per day",xlab="Total number of steps per day")
s<-summary(total_steps_per_day$total_steps)
day_type<-function(x){
d=weekdays(as.POSIXct(x))
if(d=="Saturday" || d=="Sunday"){
return("Weekend")
} else {
return("Weekday")
}
}
imputedcsv["type"]<-as.factor(day_type(imputedcsv$date))
imputedcsv
str(imputedcsv)
head(imputedcsv)
head(imputedcsv,20)
head(imputedcsv,200)
head(imputedcsv,2000)
day_type(imputedcsv[1,2])
day_type(imputedcsv[1,20])
day_type(imputedcsv[10,2])
day_type(imputedcsv[100,2])
day_type(imputedcsv[1000,2])
str(imputedcsv)
